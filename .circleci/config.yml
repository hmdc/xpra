version: 2.1
orbs:
  node: circleci/node@1.1.6
  anchore: anchore/anchore-engine@1.6.5
jobs:
  build:
    machine:
      image: ubuntu-1604:201903-01
    steps:
      - checkout
      - run:
          name: Install headless Chrome dependencies.
          command: |
            sudo apt-get -y update && \
            sudo apt-get install -yq \
            gconf-service libasound2 libatk1.0-0 libatk-bridge2.0-0 libc6 libcairo2 libcups2 libdbus-1-3 \
            libexpat1 libfontconfig1 libgcc1 libgconf-2-4 libgdk-pixbuf2.0-0 libglib2.0-0 libgtk-3-0 libnspr4 \
            libpango-1.0-0 libpangocairo-1.0-0 libstdc++6 libx11-6 libx11-xcb1 libxcb1 libxcomposite1 libxcursor1 \
            libxdamage1 libxext6 libxfixes3 libxi6 libxrandr2 libxrender1 libxss1 libxtst6 ca-certificates \
            fonts-liberation libappindicator1 libnss3 lsb-release xdg-utils wget
      - run:
          name: Build Xpra container and output docker image as a tarball to workspace.
          command: make build output
      - persist_to_workspace:
          root: .
          paths:
            - "*.tar"
      - run:
          name: Start XPRA container.
          command: make run
      - run:
          name: Sleep for 10 seconds while XPRA container starts.
          command: sleep 10s
      - run:
          name: Install nvm
          command: |
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            nvm
            echo 'export NVM_DIR="/opt/circleci/.nvm"' >> $BASH_ENV
            echo "[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"" >> $BASH_ENV
      - node/with-cache:
          steps:
            - run: Install node modules and test xpra.
              command: |
                nvm
                npm install
                npm run test
      - store_artifacts:
          path: ./test/artifacts
  check_for_package_updates:
    docker:
      - image: circleci/buildpack-deps:18.04
    steps:
      - checkout
      - setup_remote_docker
      - run: docker pull hmdc/xpra:latest
      - run: docker run --entrypoint= -i -t hmdc/xpra:latest dnf check-update -q
  local_image_scan:
    parameters:
      image_name:
        description: "XPRA image name"
        default: "hmdc/xpra:3.0-f30"
        type: string
    executor: anchore/anchore_engine
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: /tmp/workspace
      - checkout
      - run:
          command: 'find /tmp/workspace -name "*.tar" -exec docker load -i {} \;'
          name: load container
      - anchore/analyze_local_image:
          dockerfile_path: ./Dockerfile
          image_name: "<< parameters.image_name >>"
          policy_failure: True
          timeout: "500"
      - anchore/parse_reports
      - store_artifacts:
          path: anchore-reports
workflows:
  version: 2
  build-and-push:
    jobs:
      - build:
          context: dockerhub
      - local_image_scan:
          requires:
            - build
